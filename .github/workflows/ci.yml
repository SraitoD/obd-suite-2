name: CI

on:
  push:
    branches: [ "main", "feature/**" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: Install web dependencies
        working-directory: ./web
        run: npm ci

      - name: Lint and type-check web
        working-directory: ./web
        run: |
          npm run lint
          npm run type-check

      - name: Build web
        working-directory: ./web
        run: npm run build

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'
          cache-dependency-path: '**/requirements.txt'

      - name: Install backend dependencies
        working-directory: ./backend
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint backend
        working-directory: ./backend
        run: |
          pip install black isort flake8
          black --check .
          isort --check .
          flake8 .

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 'stable'
          channel: 'stable'

      - name: Get mobile dependencies
        working-directory: ./mobile
        run: flutter pub get

      - name: Analyze mobile
        working-directory: ./mobile
        run: flutter analyze

      - name: Check formatting
        working-directory: ./mobile
        run: flutter format --output=none --set-exit-if-changed .

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high

      - name: Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          format: 'table'
          exit-code: '1'
          severity: 'CRITICAL,HIGH'
